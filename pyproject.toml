[tool.ruff]
# Enable flake8-bugbear (`B`) and other rules for more strict linting
select = ["E", "F", "B", "I", "N", "UP", "ANN", "S"]
ignore = [
    # Ignore specific rules that might be too restrictive
    "ANN101",  # Missing type annotation for `self` in method
    "ANN002",  # Missing type annotation for `*args`
    "ANN003",  # Missing type annotation for `**kwargs`
    "S101",    # Use of assert detected
    "B008",    # Do not perform function calls in argument defaults
    "ANN201",  # Missing type annotation for public method
    "ANN001",  # Missing type annotation for function
]

# Exclude a variety of commonly ignored directories
exclude = [
    ".git",
    ".ruff_cache",
    "__pycache__",
    "build",
    "dist",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Target Python 3.7+
target-version = "py37"

[tool.ruff.isort]
# Use Google's isort profile
known-first-party = ["dataset", "model", "utils", "Normalize", "methods"]
known-third-party = ["torch", "torchvision", "PIL", "numpy", "pandas", "timm"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.flake8-annotations]
allow-star-arg-any = true
suppress-none-returning = true

[tool.ruff.flake8-bugbear]
# B950: line too long. Already covered by E501, but gives a bit more allowance.
extend-immutable-calls = ["torch.nn.Parameter", "torch.tensor", "torch.Tensor"]

[tool.ruff.mccabe]
# Maximum McCabe complexity allowed for a function
max-complexity = 15

[tool.ruff.per-file-ignores]
# Ignore import-related rules in __init__.py files
"__init__.py" = ["F401", "E402"]
# Ignore annotation-related issues in test files
"test_*.py" = ["ANN"]

[tool.ruff.pydocstyle]
convention = "google"  # Use Google-style docstrings

[tool.black]
line-length = 88
target-version = ["py37"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.pyright]
include = ["**/*.py"]
exclude = ["**/node_modules", "**/__pycache__", "**/.git"]
venvPath = "."
venv = ".venv"
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false